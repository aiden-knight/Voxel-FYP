#version 450

struct Particle {
	vec4 position;
	vec4 velocity;
	vec4 colour;
};

layout (binding = 0) uniform ParameterUBO {
	mat4 view;
	mat4 proj;
	uint particleCount;
	float velocityMult;
	float deltaTime;
} ubo;

layout(std140, binding = 1) readonly buffer ParticleSSBOIn {
	Particle particlesIn[ ];
};

layout(std140, binding = 2) buffer ParticleSSBOOut {
	Particle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {
	uint index = gl_GlobalInvocationID.x;
	if(index >= ubo.particleCount) return;

	Particle particleIn = particlesIn[index];

	particlesOut[index].position = particleIn.position + particleIn.velocity * ubo.deltaTime * ubo.velocityMult;
}